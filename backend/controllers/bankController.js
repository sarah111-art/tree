// ‚úÖ CONTROLLER: controllers/bankController.js (Chuy·ªÉn kho·∫£n ng√¢n h√†ng th·ªß c√¥ng)

// ƒê√¢y l√† controller m√¥ ph·ªèng g·ª≠i ƒë∆°n h√†ng v√† hi·ªÉn th·ªã th√¥ng tin chuy·ªÉn kho·∫£n ng√¢n h√†ng

import Order from '../models/orderModel.js';
import QR from '../models/qrModel.js';

export const createBankOrder = async (req, res) => {
  try {
    const { customer, items, total } = req.body;

    if (!customer || !items || !total) {
      return res.status(400).json({ message: 'Thi·∫øu th√¥ng tin ƒë∆°n h√†ng' });
    }

    const newOrder = new Order({ customer, items, total, paymentMethod: 'bank', status: 'pending' });
    const saved = await newOrder.save();

    res.status(201).json({
      message: 'ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c t·∫°o. Vui l√≤ng chuy·ªÉn kho·∫£n theo th√¥ng tin b√™n d∆∞·ªõi.',
      order: saved,
      bankInfo: {
        bankName: 'Ng√¢n h√†ng Vietcombank',
        accountNumber: '0123456789',
        accountName: 'CTY TNHH BONSAI VIET',
        content: `Thanh toan DH#${saved._id}`,
      },
      vnpayQR: vnpayQR ? {
        imageUrl: vnpayQR.imageUrl,
        bankCode: vnpayQR.bankCode,
        accountNumber: vnpayQR.accountNumber
      } : null
    });
  } catch (err) {
    console.error('L·ªói t·∫°o ƒë∆°n h√†ng ng√¢n h√†ng:', err);
    res.status(500).json({ message: 'L·ªói server', error: err.message });
  }
};

// üìå L·∫•y th√¥ng tin QR VNPay
export const getVNPayQRInfo = async (req, res) => {
  try {
    const vnpayQR = await QR.findOne({ type: 'vnpay', isActive: true });
    if (!vnpayQR) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y QR VNPay' });
    }
    res.json(vnpayQR);
  } catch (err) {
    res.status(500).json({ message: 'L·ªói khi l·∫•y QR VNPay', error: err.message });
  }
};
