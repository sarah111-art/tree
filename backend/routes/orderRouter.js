import express from 'express';
import Order from '../models/orderModel.js';

const orderRouter = express.Router();

// üìå Create a new order
orderRouter.post('/', async (req, res) => {
  try {
    const { customer, items, total } = req.body;

    if (!customer || !items || !total) {
      return res.status(400).json({ message: 'Thi·∫øu th√¥ng tin ƒë∆°n h√†ng' });
    }

    const newOrder = new Order({ customer, items, total });
    const saved = await newOrder.save();

    res.status(201).json(saved);
  } catch (error) {
    console.error('L·ªói t·∫°o ƒë∆°n h√†ng:', error);
    res.status(500).json({ message: 'L·ªói server', error });
  }
});

// üìå Get all orders (for admin)
orderRouter.get('/', async (req, res) => {
  try {
    const orders = await Order.find().sort({ createdAt: -1 });
    res.json(orders);
  } catch (err) {
    res.status(500).json({ message: 'L·ªói l·∫•y danh s√°ch ƒë∆°n h√†ng' });
  }
});

// üìå Update order status (admin)
orderRouter.put('/:id/status', async (req, res) => {
  try {
    const { status } = req.body;
    const updated = await Order.findByIdAndUpdate(
      req.params.id,
      { status },
      { new: true }
    );
    res.json(updated);
  } catch (err) {
    res.status(500).json({ message: 'L·ªói c·∫≠p nh·∫≠t ƒë∆°n h√†ng' });
  }
});
orderRouter.get('/user/:email', async (req, res) => {
  const { email } = req.params;
  try {
    const userOrders = await Order.find({ 'customer.email': email });
    res.json(userOrders);
  } catch (err) {
    res.status(500).json({ message: 'L·ªói khi l·ªçc ƒë∆°n h√†ng theo user' });
  }
});
// routes/orderRoutes.js
orderRouter.put('/:id/paid', async (req, res) => {
  try {
    const updated = await Order.findByIdAndUpdate(
      req.params.id,
      { isPaid: true },
      { new: true }
    );
    res.json(updated);
  } catch (err) {
    res.status(500).json({ message: 'L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i thanh to√°n' });
  }
});

export default orderRouter;
