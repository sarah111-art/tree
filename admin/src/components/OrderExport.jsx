import React from 'react';
import * as XLSX from 'xlsx';

const OrderExport = ({ orders, onClose }) => {
  const exportToExcel = () => {
    // Chu·∫©n b·ªã d·ªØ li·ªáu cho Excel
    const excelData = orders.map((order, index) => ({
      'STT': index + 1,
      'M√£ ƒë∆°n h√†ng': order.orderNumber || order._id,
      'Kh√°ch h√†ng': order.customer?.name || 'N/A',
      'SƒêT': order.customer?.phone || 'N/A',
      'Email': order.customer?.email || 'N/A',
      'ƒê·ªãa ch·ªâ': order.customer?.address || 'N/A',
      'T·ªïng ti·ªÅn': order.total?.toLocaleString() + ' ‚Ç´',
      'Ph∆∞∆°ng th·ª©c thanh to√°n': getPaymentMethodText(order.paymentMethod),
      'Tr·∫°ng th√°i': getStatusText(order.status),
      'Ng√†y ƒë·∫∑t': new Date(order.createdAt).toLocaleDateString('vi-VN'),
      'S·∫£n ph·∫©m': order.items?.map(item => `${item.name} (x${item.quantity})`).join(', ') || 'N/A'
    }));

    // T·∫°o workbook v√† worksheet
    const ws = XLSX.utils.json_to_sheet(excelData);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, 'ƒê∆°n h√†ng');

    // ƒêi·ªÅu ch·ªânh ƒë·ªô r·ªông c·ªôt
    ws['!cols'] = [
      { width: 5 },   // STT
      { width: 15 },  // M√£ ƒë∆°n h√†ng
      { width: 20 },  // Kh√°ch h√†ng
      { width: 15 },  // SƒêT
      { width: 25 },  // Email
      { width: 30 },  // ƒê·ªãa ch·ªâ
      { width: 15 },  // T·ªïng ti·ªÅn
      { width: 20 },  // Ph∆∞∆°ng th·ª©c thanh to√°n
      { width: 15 },  // Tr·∫°ng th√°i
      { width: 15 },  // Ng√†y ƒë·∫∑t
      { width: 50 }   // S·∫£n ph·∫©m
    ];

    // Xu·∫•t file
    XLSX.writeFile(wb, `danh-sach-don-hang-${new Date().toISOString().split('T')[0]}.xlsx`);
  };

  const getStatusText = (status) => {
    const statusMap = {
      'pending': 'Ch·ªù x√°c nh·∫≠n',
      'confirmed': 'ƒê√£ x√°c nh·∫≠n',
      'shipping': 'ƒêang giao',
      'delivered': 'ƒê√£ giao',
      'cancelled': 'ƒê√£ hu·ª∑'
    };
    return statusMap[status] || status;
  };

  const getPaymentMethodText = (method) => {
    const methodMap = {
      'cod': 'Thanh to√°n khi nh·∫≠n h√†ng',
      'momo': 'V√≠ MoMo',
      'vnpay': 'VNPay',
      'bank': 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng'
    };
    return methodMap[method] || method || 'Thanh to√°n khi nh·∫≠n h√†ng';
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white p-6 rounded-lg shadow-xl max-w-md w-full mx-4">
        <h3 className="text-lg font-bold mb-4">üìä Xu·∫•t danh s√°ch ƒë∆°n h√†ng</h3>
        
        <div className="space-y-3 mb-6">
          <div>
            <span className="font-medium">T·ªïng s·ªë ƒë∆°n h√†ng:</span>
            <span className="ml-2 text-blue-600 font-bold">{orders.length}</span>
          </div>
          <div>
            <span className="font-medium">T·ªïng doanh thu:</span>
            <span className="ml-2 text-green-600 font-bold">
              {orders.reduce((sum, order) => sum + (order.total || 0), 0).toLocaleString()} ‚Ç´
            </span>
          </div>
          <div className="text-sm text-gray-600">
            File s·∫Ω ƒë∆∞·ª£c t·∫£i v·ªÅ v·ªõi ƒë·ªãnh d·∫°ng Excel (.xlsx)
          </div>
        </div>

        <div className="flex gap-3">
          <button
            onClick={exportToExcel}
            className="flex-1 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors"
          >
            üìä Xu·∫•t Excel
          </button>
          <button
            onClick={onClose}
            className="flex-1 bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors"
          >
            ‚ùå H·ªßy
          </button>
        </div>
      </div>
    </div>
  );
};

export default OrderExport;
